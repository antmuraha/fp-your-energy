{"version":3,"file":"index.js","sources":["../src/js/header.js","../src/js/lib/errors/HTTPResponseError.js","../src/js/lib/errors/JsonParseError.js","../src/js/lib/errors/FetchError.js","../src/js/lib/utils/attempt.js","../src/js/lib/utils/dev-logger.js","../src/js/lib/utils/object-to-querystring.js","../src/js/lib/create-rest-client.js","../src/js/api/rest-client.js","../src/js/some-script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const burgerBtn = document.getElementById('burgerBtn');\n  const mobileMenu = document.getElementById('burgerMenu');\n  const closeBtn = document.getElementById('close-mob-menu');\n  const socialLinks = document.querySelector('.social-links');\n\n  const updateSocialLinksVisibility = () => {\n    if (window.innerWidth <= 768) {\n      socialLinks.style.display = 'none';\n    } else {\n      socialLinks.style.display = '';\n    }\n  };\n\n  burgerBtn.addEventListener('click', () => {\n    mobileMenu.classList.add('open');\n  });\n\n  closeBtn.addEventListener('click', () => {\n    mobileMenu.classList.remove('open');\n  });\n\n  window.addEventListener('click', e => {\n    if (!mobileMenu.contains(e.target) && !burgerBtn.contains(e.target)) {\n      mobileMenu.classList.remove('open');\n    }\n  });\n\n  updateSocialLinksVisibility();\n  window.addEventListener('resize', updateSocialLinksVisibility);\n});","export class HTTPResponseError extends Error {\n  status;\n\n  constructor(message, status) {\n    super(message);\n    this.status = status;\n  }\n}\n","export class JsonParseError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}","/**\n * Error thrown when a fetch operation fails to execute properly\n * @extends {Error}\n * @description This error is thrown when fetch function encounters issues like wrong URL,\n * network problems, or invalid request parameters\n */\nexport class FetchError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}","/**\n * Safely executes a function and wraps its result or error in a standardized format\n * @template T\n * @param {() => Promise<T>} fn - Function to execute\n * @returns {Promise<{data: T|null, error: Error|null, isError: boolean}>} Promise resolving to object containing execution result or error\n */\nexport const attempt = async (fn) => {\n  try {\n    return {\n      data: await fn(),\n      error: null,\n      isError: false,\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error,\n      isError: true,\n    }\n  }\n}","/**\n * Creates a development logger that only outputs in development environment\n * @returns {Object} Collection of logging functions\n */\nconst makeDevLogger = () => {\n  const isDev = import.meta.env.DEV;\n\n  /**\n   * Creates a logging function that only executes in development environment\n   * @param {Function} fn - Console function to wrap\n   * @returns {Function} Wrapped logging function\n   */\n  const commonLog = (fn) => (...args) => {\n    if(isDev) fn(...args)\n  };\n\n  const log = commonLog(console.log);\n  const warn = commonLog(console.warn);\n  const error = commonLog(console.error);\n  const info = commonLog(console.info);\n  const table = commonLog(console.table);\n\n  return {\n    /** Log message to console (dev environment only) */\n    log,\n    /** Log warning message to console (dev environment only) */\n    warn,\n    /** Log error message to console (dev environment only) */\n    error,\n    /** Log info message to console (dev environment only) */\n    info,\n    /** Log data as table to console (dev environment only) */\n    table,\n  }\n};\n\nexport const devLogger = makeDevLogger();","/**\n * Converts object parameters to URL query string\n * @param {Object} [params] - Object containing query parameters\n * @returns {string} Query string starting with '?' or empty string if no parameters\n */\nexport const objectToQueryString = (params) => {\n  if (!params) return '';\n\n  return '?' + Object.entries(params)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n};","import { JsonParseError, HTTPResponseError, FetchError } from './errors';\nimport { devLogger, attempt, objectToQueryString } from './utils';\n\n/**\n * Creates a REST client factory function with predefined base domain\n * @param {string} baseDomain - The base domain URL for all API requests\n * @param handleError\n * @returns {Function} Configured REST client function\n */\nexport const createRestClient = (baseDomain, handleError) => /**\n * Executes REST API request\n * @param url - Request URL path\n * @param {Object} [options] - Request options\n * @param {string} [options.method] - HTTP method\n * @param {Object} [options.query] - Query parameters\n * @param {any} [options.body] - Request body\n * @returns {Promise<{data: any|null, error: Error|null, isError: boolean}>} Response with data or error\n */\nasync (url, { method = 'GET', query, body }) => {\n  const queryString = objectToQueryString(query);\n\n  const fetchResult = await attempt(() => fetch(`${baseDomain}${url}${queryString}`, {\n    method,\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }));\n\n  if (fetchResult.isError) {\n    const error = new FetchError(`Error fetching ${url}${queryString}`, fetchResult.error);\n\n    devLogger.error(error.toString());\n\n    return {\n      data: null, error: error, isError: true,\n    };\n  }\n\n  if (!fetchResult.data.ok) {\n    const error = new HTTPResponseError(`HTTP ${fetchResult.data.status} error in request ${url}${queryString}`, fetchResult.data.status);\n\n    devLogger.error(error);\n\n    handleError?.[fetchResult.data.status]?.(error);\n\n    return {\n      data: null, error, isError: true,\n    };\n  }\n\n  const { data, error, isError } = await attempt(() => fetchResult.data.json());\n\n  if (isError) {\n    const error = new JsonParseError(`Error parsing JSON in request ${url}${queryString}`);\n\n    devLogger.error(error);\n\n    return {\n      data: null, error, isError,\n    };\n  }\n\n  return {\n    data, error, isError,\n  };\n};","import { createRestClient } from '../lib/create-rest-client'\n\nconst handleError = {\n  400: (error) => {},\n  401: (error) => {},\n  403: (error) => {},\n  404: (error) => {\n    console.log('404 error:', error);\n  },\n  500: (error) => {},\n}\n\nconst makeRequest = createRestClient(import.meta.env.VITE_API_URL, handleError);\n\n/**\n * Executes GET request to REST API\n * @param {string} url - Request URL path (must start with /)\n * @param {Object} [config] - Request configuration\n * @param {Object} [config.query] - Query parameters for URL\n * @returns {Promise<{data: object|null, error: Error|null, isError: boolean}>} Response with data or error\n */\nconst get = async (url, config) => await makeRequest(url, {\n  ...config,\n  method: 'GET',\n  body: undefined,\n})\n\n/**\n * Executes POST request to REST API\n * @param {string} url - Request URL path (must start with /)\n * @param {Object} [config] - Request configuration\n * @param {Object} [config.query] - Query parameters for URL\n * @returns {Promise<{data: object|null, error: Error|null, isError: boolean}>} Response with data or error\n */\nconst post = async (url, config) => await makeRequest(url, {\n  ...config,\n  method: 'POST',\n});\n\n/**\n * Executes PUT request to REST API\n * @param {string} url - Request URL path (must start with /)\n * @param {Object} [config] - Request configuration\n * @param {Object} [config.query] - Query parameters for URL\n * @returns {Promise<{data: object|null, error: Error|null, isError: boolean}>} Response with data or error\n */\nconst put = async (url, config) => await makeRequest(url,{\n  ...config,\n  method: 'PUT',\n});\n\n/**\n * Executes PATCH request to REST API\n * @param {string} url - Request URL path (must start with /)\n * @param {Object} [config] - Request configuration\n * @param {Object} [config.query] - Query parameters for URL\n * @returns {Promise<{data: object|null, error: Error|null, isError: boolean}>} Response with data or error\n */\nconst patch = async (url, config) => await makeRequest(url, {\n  ...config,\n  method: 'PATCH',\n});\n\n/**\n * Executes DELETE request to REST API\n * @param {string} url - Request URL path (must start with /)\n * @param {Object} [config] - Request configuration\n * @param {Object} [config.query] - Query parameters for URL\n * @param {Object} [config.body] - Request body\n * @returns {Promise<{data: object|null, error: Error|null, isError: boolean}>} Response with data or error\n */\nconst del = async (url, config) => await makeRequest(url, {\n  ...config,\n  method: 'DELETE',\n});\n\nexport const api = {\n  get,\n  post,\n  put,\n  patch,\n  del,\n}\n","import { api } from './api'\nimport { devLogger } from './lib/utils/index.js';\n\n// test request\n(async function () {\n  console.log(\"Some JavaScript code\");\n  const result = await api.get('/exercises', {\n    query: {\n      test: 2,\n      abcd: 'test string'\n    }\n  })\n\n  console.log(result)\n})();\n\n// test request 404 - see js/api/rest-client.js to define handlers\n(async function () {\n  console.log(\"Some JavaScript code\");\n  const result = await api.get('/api-request-1111')\n\n  console.log(result)\n})();\n\n// test devLogger - should not log in PROD env\ndevLogger.log('devLogger test');\n\nexport {}"],"names":["burgerBtn","mobileMenu","closeBtn","socialLinks","updateSocialLinksVisibility","e","HTTPResponseError","message","status","__publicField","JsonParseError","FetchError","attempt","fn","error","makeDevLogger","commonLog","args","log","warn","info","table","devLogger","objectToQueryString","params","key","value","createRestClient","baseDomain","handleError","url","method","query","body","queryString","fetchResult","_a","data","isError","makeRequest","get","config","post","put","patch","del","api","result"],"mappings":"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"}